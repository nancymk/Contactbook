{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.push(action.payload);\n    },\n    editUser: (state, action) => {\n      const {\n        id,\n        name,\n        email\n      } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n\n      if (existingUser) {\n        existingUser.name = name;\n        existingUser.email = email;\n      }\n    },\n    deleteUser: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n\n      if (existingUser) {\n        return state.filter(user => user.id !== id);\n      }\n    }\n  }\n});\nexport const {\n  addUser,\n  editUser,\n  deleteUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/anastasia.makarova/Downloads/Contact book/Contact book/src/features/users/userSlice.js"],"names":["createSlice","initialState","userSlice","name","reducers","addUser","state","action","push","payload","editUser","id","email","existingUser","find","user","deleteUser","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,OADsB;AAE5BF,EAAAA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,KAHO;AAIRC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAM;AAAEI,QAAAA,EAAF;AAAMR,QAAAA,IAAN;AAAYS,QAAAA;AAAZ,UAAsBL,MAAM,CAACE,OAAnC;AACA,YAAMI,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA/B,CAArB;;AACA,UAAGE,YAAH,EAAiB;AACfA,QAAAA,YAAY,CAACV,IAAb,GAAoBA,IAApB;AACAU,QAAAA,YAAY,CAACD,KAAb,GAAqBA,KAArB;AACD;AACF,KAXO;AAYRI,IAAAA,UAAU,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAM;AAAEI,QAAAA;AAAF,UAASJ,MAAM,CAACE,OAAtB;AACA,YAAMI,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA/B,CAArB;;AACA,UAAGE,YAAH,EAAiB;AACf,eAAOP,KAAK,CAACW,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAjC,CAAP;AACD;AACF;AAlBO;AAHkB,CAAD,CAA7B;AAyBA,OAAO,MAAM;AAAEN,EAAAA,OAAF;AAAWK,EAAAA,QAAX;AAAqBM,EAAAA;AAArB,IAAoCd,SAAS,CAACgB,OAApD;AACP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.push(action.payload);\n    },\n    editUser: (state, action) => {\n      const { id, name, email } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n      if(existingUser) {\n        existingUser.name = name;\n        existingUser.email = email;\n      }\n    },\n    deleteUser: (state, action) => {\n      const { id } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n      if(existingUser) {\n        return state.filter(user => user.id !== id);\n      }\n    }\n  }\n});\n\nexport const { addUser, editUser, deleteUser } = userSlice.actions;\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}